@extends('layout')
@section('content')
       <!-- ======= F.A.Q Section ======= -->
    
       <section id="faq" class="faq">
        <div class="container">
  
          <div class="section-title" data-aos="zoom-in">
            <h2>F.A.Q</h2>
            <h3>Часто задаваемые <span>Вопросы</span></h3>
            <p>Тут вы можете просмотреть часто задаваемые вопросы у нас.</p>
          </div>
  
          <div class="faq-list">
            <ul>
  
              <li data-aos="fade-up" data-aos-delay="200">
                <div class="alert alert-success" role="alert">
                
                  
                <i class="bx bx-help-circle icon-help"></i> <a data-bs-toggle="collapse" data-bs-target="#faq-list-3" class="collapsed">Как пользователи регистрируются в приложении?  <i class="bx bx-chevron-down icon-show"></i><i class="bx bx-chevron-up icon-close"></i></a>
                <div id="faq-list-3" class="collapse" data-bs-parent=".faq-list">
                  <p>
                    

В маркетплейсах у пользователей есть 2 роли: заказчик и исполнитель.

В маркетплейсах пользователь может быть в обеих ролях. По умолчанию — регистрируется как заказчик (по статистике YouDo, на 5 заказчиков 1 исполнитель). Для того чтобы стать исполнителем, заполняет анкету, где указывает информацию о себе, портфолио, дипломы и прочую информацию в зависимости от сферы

Для регистрации на сайте и в мобильных приложениях используется привязка к номеру телефона. Далее он выступает как идентификатор пользователя.

В этом году вижу интересную тенденцию. Если ранее подобные проекты делали, как полнофункциональные сайт и приложения для обеих ролей, то сейчас делается для заказчика сайт (SEO, админка, продающие лендинги и так далее), а для исполнителей приложение (быстрое уведомление о заказах через push, моментальные отклики).

                  </p>
                </div>
            </div>
              </li>
  
              <li data-aos="fade-up" data-aos-delay="300">
                <div class="alert alert-success" role="alert">
                <i class="bx bx-help-circle icon-help"></i> <a data-bs-toggle="collapse" data-bs-target="#faq-list-4" class="collapsed"> Где будут регистрироваться заявки и задания?  <i class="bx bx-chevron-down icon-show"></i><i class="bx bx-chevron-up icon-close"></i></a>
                <div id="faq-list-4" class="collapse" data-bs-parent=".faq-list">
                  <p>
                    

Когда заказчик создает задание, он заполняет описание, выбирает категории работ, эта информация попадает в базу данных.

Созданные задания отображаются исполнителю на некой доске объявлений. Он может их отфильтровать по категориям работ, которые он выполняет, городу и прочим актуальным параметрам.

То есть вся информация о всех заданиях хранится в базе данных, а на экранах приложения и на сайте отображается то, что запрашивает пользователь.

Администратор приложения имеет доступ к базе данных и может изменять там информацию, которую внесли пользователи (опечатки, спам, ненорматив).

                  </p>
                </div>
                </div>
              </li>
  
              <li data-aos="fade-up" data-aos-delay="400">
                <div class="alert alert-success" role="alert">
                <i class="bx bx-help-circle icon-help"></i> <a data-bs-toggle="collapse" data-bs-target="#faq-list-5" class="collapsed">Нужен ли диспетчер для назначения заявок исполнителям? <i class="bx bx-chevron-down icon-show"></i><i class="bx bx-chevron-up icon-close"></i></a>
                <div id="faq-list-5" class="collapse" data-bs-parent=".faq-list">
                  <p>
                   

Когда маркетплейс выступает, как площадка для встречи исполнителей и заказчиков и не отвечает за качество работ исполнителей — нет. Достаточно на старте раз в сутки заходить и чистить спамерские задания и неадекватных мастеров.

Назначение исполнителей происходит по принципу тендера.

Заказчик предлагает всем задание, исполнители оставляют свои предложения. Заказчик выбирает самое выгодное и работает с этим исполнителем

Если вы не хотите, чтобы исполнители напрямую связывались с заказчиками, тогда нужен человек, который обрабатывает заявки и назначает их исполнителям.

Самый распространенный вариант — постмодерация заданий. То есть заказчики выкладывают задания, администратор приложения может просматривать, удалять, редактировать уже выложенные задания.

                  </p>
                </div>
                </div>
              </li>
  
              <li data-aos="fade-up" data-aos-delay="400">
                <div class="alert alert-success" role="alert">
                <i class="bx bx-help-circle icon-help"></i> <a data-bs-toggle="collapse" data-bs-target="#faq-list-6" class="collapsed"> Как можно монетизировать маркетплейс? <i class="bx bx-chevron-down icon-show"></i><i class="bx bx-chevron-up icon-close"></i></a>
                <div id="faq-list-6" class="collapse" data-bs-parent=".faq-list">
                  <p>
           

Есть несколько типовых способов:

Оплата подписки. Исполнитель платит фиксированную сумму в месяц за то, что он может откликаться на задания. Все остальные взаимоотношения между ролями бесплатные.

Комиссия за безопасную сделку. Заказчик или исполнители оплачивают дополнительный процент к сумме сделки за то, что сервис становися гарантом сделки. То есть берёт с заказчика деньги до начала работ, а исполнителю выплачивает после подтверждения выполнения от заказчика. Таким образом обе стороны уверены в том что они получат результат и оплату.

Выделение в списке. На досках объявлений чаще всего — это поднятие объявления наверх или выделение цветом. В сервисах заказа услуг — аналогичные действия для заказов и мастеров в соответствующих списках.

Оплата за отклики. Берётся оплата за то, чтобы мастер имел возможность написать своё предложение заказчику в задании. На досках видел оплату за доступ к контактам продавца.

                  </p>
                </div>
            </div>
              </li>
  
              <li data-aos="fade-up" data-aos-delay="400">
                <div class="alert alert-success" role="alert">
                <i class="bx bx-help-circle icon-help"></i> <a data-bs-toggle="collapse" data-bs-target="#faq-list-7" class="collapsed">Как пользователи кладут деньги на баланс? На чьем счету хранятся деньги?  <i class="bx bx-chevron-down icon-show"></i><i class="bx bx-chevron-up icon-close"></i></a>
                <div id="faq-list-7" class="collapse" data-bs-parent=".faq-list">
                  <p>
                    

Здесь есть два варианта. Когда владелец является физлицом (не совсем законно, но на первых порах никто не заметит), либо юрлицом.

В первом случае регистрируется личный кошелёк, например в «Яндекс.Кошельке», во втором подключается эквайринг от банка, либо платёжного агрегатора, например, «Касса» от того же «Яндекса». Сервис на букву Я не рекламирую, просто первое, что пришло в голову. Для программиста, по большому счёту, любой эквайер примерно одинаков, и методы подключения одни и те же, поэтому, ориентируйтесь чисто на тарифы и условия обслуживания.

Далее процессы идентичны. Пользователь пополняет баланс в приложении или на сайте. Деньги с его карты уходят сразу к Вам на расчётный счёт или в кошелёк, а ему на баланс зачисляются виртуальные рубли, за которые он и покупает подписку или иные платные услуги.

Важный момент — всеми деньгами этого платежа можно пользоваться с момента пополнения. То есть, если клиент пополнил баланс на 1000 рублей, но потратил на услуги сервиса 300 рублей (700 рублей остались на балансе), то вы пользуетесь всей 1000.

                  </p>
                </div>
                </div>
              </li>
            </ul>
          </div>
  
        </div>
      </section><!-- End F.A.Q Section -->
@endsection